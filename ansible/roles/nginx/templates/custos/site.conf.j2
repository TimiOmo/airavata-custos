upstream apiserver {
  server 127.0.0.1:{{envoy_port}};
}
upstream scim {
  server 127.0.0.1:{{custos_int_server_port}};
}
server {
   listen 80;
   server_name {{ansible_host}};
   return 301 {{ansible_host}};
 }

server {
    listen 443 ssl;

    # The host name to respond to
    server_name        {{ansible_host}};
    ssl_certificate    /etc/letsencrypt/live/{{ansible_host}}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ansible_host}}/privkey.pem;
   

    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow_Credentials' 'true';
    add_header 'Access-Control-Allow-Headers' 'Authorization,authorization, Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,user-token';
    add_header  'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';
    rewrite_log on;
    error_log   /var/log/nginx/error.log;

     location /apiserver/ {

 if ($request_method = 'OPTIONS'){
      return 204;
       }

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      rewrite           /apiserver(.*)  $1 break;
      proxy_pass         http://apiserver;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_ssl_verify   off;
  
   }

     location /scim/ {

 if ($request_method = 'OPTIONS'){
      return 204;
       }

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      rewrite           /scim(.*)  $1 break;
      proxy_pass         http://scim;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_ssl_verify   off;

   }

}
