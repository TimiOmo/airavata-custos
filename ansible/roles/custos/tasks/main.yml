#
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

---
- name: Install Custos pre-requisites (RedHat)
  yum: name={{ item }} state=latest update_cache=yes
  with_items:
    - maven
  become: yes
  when: ansible_os_family == "RedHat"

- name: Install Custos pre-requisites (Debian)
  apt: name={{ item }} state=latest update_cache=yes
  with_items:
    - maven
  become: yes
  when: ansible_os_family == "Debian"

#- name: open firewall port 8443 for DRMS REST connections
#  firewalld: port="8443/tcp"
#    zone=public permanent=true state=enabled immediate=yes
#  become: yes
#
#- name: open firewall port 7070 for DRMS Grpc connections
#  firewalld:
#    zone: public
#    permanent: yes
#    state: enabled
#    immediate: yes
#    rich_rule: rule family=ipv4 source address="{{ item }}" port port="7070" protocol=tcp accept
#  become: yes
#  with_items:
#    - "{{ sharing_subnets }}"
#
#- name: open firewall port 80 for HTTP connections
#  firewalld: port="80/tcp"
#    zone=public permanent=true state=enabled immediate=yes
#  become: yes
#
#- name: open firewall port 443 for HTTPS connections
#  firewalld: port="443/tcp"
#    zone=public permanent=true state=enabled immediate=yes
#  become: yes
#
#- name: open firewall port 9092 for Kafka connections
#  firewalld:
#    zone: public
#    permanent: yes
#    state: enabled
#    immediate: yes
#    rich_rule: rule family=ipv4 source address="{{ item }}" port port="9092" protocol=tcp accept
#  become: yes
#  with_items:
#    - "{{ sharing_subnets }}"
#
#- name: open firewall port 6060 for Data Orchestrator Grpc connections
#  firewalld:
#    zone: public
#    permanent: yes
#    state: enabled
#    immediate: yes
#    rich_rule: rule family=ipv4 source address="{{ item }}" port port="6060" protocol=tcp accept
#  become: yes
#  with_items:
#    - "{{ sharing_subnets }}"
#
#- name: open firewall port {{ datalake_data_orch_http_port }} for Data Orchestrator HTTP connections
#  firewalld:
#    zone: public
#    permanent: yes
#    state: enabled
#    immediate: yes
#    rich_rule: rule family=ipv4 source address="{{ item }}" port port="{{ datalake_data_orch_http_port }}" protocol=tcp accept
#  become: yes
#  with_items:
#    - "{{ sharing_subnets }}"
#
#- name: open firewall port {{ datalake_data_orch_grpc_port }} for Data Orchestrator gRPC connections
#  firewalld:
#    zone: public
#    permanent: yes
#    state: enabled
#    immediate: yes
#    rich_rule: rule family=ipv4 source address="{{ item }}" port port="{{ datalake_data_orch_grpc_port }}" protocol=tcp accept
#  become: yes
#  with_items:
#    - "{{ sharing_subnets }}"
#
#- name: open firewall port {{ datalake_data_drms_rest_port }} for DRMS REST connections
#  firewalld:
#    zone: public
#    permanent: yes
#    state: enabled
#    immediate: yes
#    rich_rule: rule family=ipv4 source address="{{ item }}" port port="{{ datalake_data_drms_rest_port }}" protocol=tcp accept
#  become: yes
#  with_items:
#    - "{{ sharing_subnets }}"

- name: Create Custos deployment directory {{ custos_deployment_dir }}
  become: yes
  file: path={{ custos_deployment_dir }}
    state=directory
    mode=0755
    owner={{ user }}
    group={{ group }}

- name: Create Custos source directory
  become: yes
  file: path={{ custos_source_dir }}
    state=directory
    mode=0755
    owner={{ user }}
    group={{ group }}

- name: git checkout from Custos github repo {{ custos_repo }} branch {{ custos_git_branch }}
  git: repo="{{ custos_repo }}"
    dest="{{ custos_source_dir }}"
    version="{{ custos_git_branch }}"
  register: checkout
  tags: update
  become: yes
  become_user: "{{ user }}"

- name: Run Custos maven build
  command: mvn clean install -Dmaven.test.skip=true chdir="{{ custos_source_dir }}/"
  environment:
    MAVEN_OPTS: "-Xmx2048m"
  register: build
  tags: update
  become: yes
  become_user: "{{ user }}"

#- name: Stop drms  service
#  command: systemctl daemon-reload
#  notify: stop drms-service
#  become: yes
#
#- name: Stop custos synchronizer  service
#  command: systemctl daemon-reload
#  notify: stop drms-custos-sync
#  become: yes
#
#- name: Stop orchestrator  service
#  command: systemctl daemon-reload
#  notify: stop orch-service
#  become: yes


- name: Delete lib directories of the distributions
  file:
    state: absent
    path: "{{ custos_deployment_dir }}/{{ item }}"
  with_items:
    - "Custos-Core-Services-Server-{{custos_distribution_version}}/lib"
    - "Custos-Integration-Services-Server-{{custos_distribution_version}}/lib"
  become: yes
  become_user: "{{ user }}"
  ignore_errors: yes

- name: Copy Custos distributions to Custos deployment directory
  unarchive: "src={{ custos_source_dir }}/{{ item }}
              dest={{ custos_deployment_dir }}/ copy=no"
  with_items:
    - "custos-core-services-server/target/Custos-Core-Services-Server-{{custos_distribution_version}}-bin.zip"
    - "custos-integration-services-server/target/Custos-Integration-Services-Server-{{custos_distribution_version}}-bin.zip"
  become: yes
  become_user: "{{ user }}"

- name: Copy Custos property files
  template: "src={{ item.name }}
            dest={{ custos_deployment_dir }}/{{ item.dir }}/conf/{{ item.target }}
            owner={{ user }}
            group={{ group }}
            mode=\"u=rw,g=r,o=r\""
  with_items:
    - { name: custos-core-services/application.properties.j2,
        dir: "Custos-Core-Services-Server-{{custos_distribution_version}}",
        target: application.properties}
    - { name: custos-core-services/bootstrap.properties.j2,
        dir: "Custos-Core-Services-Server-{{custos_distribution_version}}",
        target: bootstrap.properties }
    - { name: custos-integration-services/application.properties.j2,
        dir: "Custos-Integration-Services-Server-{{custos_distribution_version}}",
        target: application.properties }
  become: yes
  become_user: "{{ user }}"
#
#- name: Start drms  service
#  command: systemctl daemon-reload
#  notify: start drms-service
#  become: yes
#
#- name: Start custos synchronizer  service
#  command: systemctl daemon-reload
#  notify: start drms-custos-sync
#  become: yes
#
#- name: Start orchestrator  service
#  command: systemctl daemon-reload
#  notify: start orch-service
#  become: yes
#
#
#- name: Start Envoy  proxy
#  command: systemctl daemon-reload
#  notify: start envoy
#  become: yes
#
