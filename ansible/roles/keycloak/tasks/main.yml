#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

---
- name: Install Keycloak pre-requisites (Debian)
  apt: name={{ item }} state=latest update_cache=yes
  with_items:
    - maven
  become: yes
  when: ansible_os_family == "Debian"

- name: Create Keycloak deployment directory {{ keycloak_install_dir }}
  become: yes
  file: path={{ keycloak_install_dir }}
    state=directory
    mode=0755
    owner={{ user }}
    group={{ group }}

- name: Create Keycloak source directory
  become: yes
  file: path={{ keycloak_source_dir }}
    state=directory
    mode=0755
    owner={{ user }}
    group={{ group }}

# Clone Keycloak repo
- name: git checkout from Keycloak github repo {{ keycloak_repo }} # branch {{ keycloak_git_branch }}
  git:
    repo: "{{ keycloak_repo }}"
    dest: "{{ keycloak_source_dir }}"
    version: "9.0.2"
    force: yes
  register: checkout
  tags: update
  become: yes
  become_user: "{{ user }}"

- name: Run Keycloak maven build
  command: mvn -Pdistribution -pl distribution/server-dist -am -Dmaven.test.skip clean install chdir="{{ keycloak_source_dir }}/"
#  mvn clean install -Dmaven.test.skip=true chdir="{{ keycloak_source_dir }}/"
  environment:
    MAVEN_OPTS: "-Xmx2048m"
  register: build
  tags: update
  become: yes
  become_user: "{{ user }}"

- name: Delete configuration directories of the distributions
  file:
    state: absent
    path: "{{ keycloak_install_dir }}/standalone/configuration"
  become: yes
  become_user: "{{ user }}"
  ignore_errors: yes

# Unarchive keycloak distribution
- name: Unarchive keycloak
  unarchive:
    src: "{{ keycloak_source_dir }}/distribution/server-dist/target/keycloak-{{ keycloak_version }}.zip"
    dest: "{{ user_home }}"
    copy: no
  become: yes
  become_user: "{{ user }}"


# setup postgresql for keycloak
- name: Install postgresql and postgresql-contrib
  apt:
    name:
      - postgresql
      - postgresql-contrib
  become: yes
#  become_user: "{{ user }}"

- name: "Install Python packages"
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - python3-psycopg2
  become: yes

- name: "Find out if PostgreSQL is initialized"
  ansible.builtin.stat:
    path: "/var/lib/pgsql/data/pg_hba.conf"
  register: postgres_data
  become: yes

- name: Start the postgresql service
  service:
    name: postgresql
    state: started
    enabled: yes
  become: yes
#  become_user: "{{ user }}"

- name: "Create database"
  postgresql_db:
    state: present
    name: "{{ keycloak_db_schema_name }}"
  become: yes
  become_user: postgres

- name: "Create db user"
  postgresql_user:
    state: present
    name: "{{ keycloak_db_username }}"
    password: "{{ keycloak_db_password }}"
  become: yes
  become_user: postgres

- name: "Grant db user access to app db"
  postgresql_privs:
    type: database
    database: "{{ keycloak_db_schema_name }}"
    roles: "{{ keycloak_db_username }}"
    grant_option: no
    privs: all
  become: yes
  become_user: postgres

- name: "Allow md5 connection for the db user"
  postgresql_pg_hba:
    dest: "/etc/postgresql/12/main/pg_hba.conf"
    contype: host
    databases: all
    method: md5
    users: "{{ keycloak_db_username }}"
    create: true
  become: yes
  become_user: postgres

- name: Retart the postgresql service
  service:
    name: postgresql
    state: restarted
  become: yes
#  become_user: "{{ user }}"

# <---------------------------- Server Configuration -------------------------------->

# SSL Configuration & postgresql
- name: copy keycloak configuration file (Standalone)
  template: >
    src=standalone.xml.j2
    dest="{{ user_home }}/{{ keycloak_install_dir }}/standalone/configuration/standalone.xml"
    owner="{{ user }}"
    group="{{ group }}"
    mode="u=rw,g=r,o=r"
  become: true
  become_user: "{{ user }}"
  tags:
       - standalone

# </------------------------------ Server Configuration ends ---------------------------->

# <---------- setup init script for keycloak, starts the server after reboot ----------->

# Init script to start keycloak in Standalone mode
- name: copy init script file (Standalone)
  template: >
    src=keycloak-standalone-init.j2
    dest="/etc/init.d/keycloak"
    owner="{{ user }}"
    group="{{ group }}"
    mode="u=rwx,g=rx,o=rx"
  become: yes
  become_user: root
  tags:
       - standalone

## System command to add the init script to enable on startup
#- name: add init script to chkconfig and startup on boot
#  command: chkconfig --level 345 keycloak on
#  become: yes
#  become_user: root
#  tags:
#       - always

# </---------- setup init script for keycloak, starts the server after reboot ----------->

# <-------------------------Initialize a new admin for keycloak-------------------------->

- name: Add master realm admin account
  command: "{{user_home}}/{{ keycloak_install_dir }}/bin/add-user-keycloak.sh -r master -u {{ keycloak_master_account_username }} -p {{ keycloak_master_account_password }}"
  args:
    creates: "{{user_home}}/{{ keycloak_install_dir }}/standalone/configuration/keycloak-add-user.json"
  become: yes
  become_user: root
  tags:
       - always


# <--------------------------start keycloak Identity server------------------------------>
- name: reload Keycloak init script
  command: systemctl daemon-reload
  become: yes
  become_user: root
  tags:
       - always

# FIXME: restarting Keycloak server doesn't work
- name: stop Keycloak server
  service: name=keycloak state=stopped
  ignore_errors: yes
  become: yes
  become_user: root
  tags:
       - always

- name: start Keycloak server
  service: name=keycloak state=started
  become: yes
  become_user: root
  tags:
       - always
